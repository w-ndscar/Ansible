---
- name: Install MSI using win_package module (UNC)
  hosts: all
  gather_facts: false
  become: true
  become_method: runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  vars:
    ansible_become_user: '{{ pass1_user }}'
    ansible_become_password: '{{ pass1_pwd }}'
  
  tasks:
    # PDF Sam Basic
    - name: Silent install PDF Sam MSI using win_package from the specified UNC path
      ansible.windows.win_package:
      # Specify the install_path on Variables in AWX before running
        path: '{{ install_path }}\pdfsam-5.1.1.msi'
        state: present
        arguments: /qb /norestart CHECK_FOR_UPDATES=false DONATE_NOTIFICATION=false SKIPTHANKSPAGE=Yes
      tags:
      - PDF_Sam
      ignore_errors: true

    # Google Chrome
    - name: Silent install Google Chrome MSI using win_package from the specified UNC path
      ansible.windows.win_package:
      # Specify the install_path on Variables in AWX before running
        path: '{{ install_path }}\googlechromestandaloneenterprise64.msi'
        state: present
        arguments: /q /norestart
      tags:
      - Google_Chrome
      ignore_errors: true

    # Firefox
    - name: Silent install Firefox MSI using win_package from the specified UNC path
      ansible.windows.win_package:
      # Specify the install_path on Variables in AWX before running
        path: '{{ install_path }}\Firefox_Setup_118.0.2.msi'
        state: present
        arguments: /q /norestart
      tags:
      - Firefox
      ignore_errors: true

    # Foxit Reader
    - name: Silent install Foxit Reader MSI using win_package from the specified UNC path
      ansible.windows.win_package:
      # Specify the install_path on Variables in AWX before running
        path: '{{ install_path }}\FoxitPDFReader121_enu_Setup.msi'
        state: present
        arguments: /q /norestart
      tags:
      - Foxit
      ignore_errors: true

    # Autodesk Design Review
    - name: Silent install Autodesk Design Review using win_package from the specified UNC path
      ansible.windows.win_package:
      # Specify the install_path on Variables in AWX before running
        path: '{{ install_path }}\AutodeskDesignReview\x86\ADR\SetupDesignReview.msi'
        state: present
        arguments: /quiet /norestart
      tags:
      - Design_Review
      ignore_errors: true
    
    # Navisworks Freedom 2023
    - name: Silent install Autodesk Navisworks Freedom 2023
      tags:
      - Navisworks_Freedom_2023
      block:
        - name: Copy Autodesk Navisworks Freedom 2023 from the specified UNC path
          ansible.windows.win_copy:
            src: '{{ install_path }}\Autodesk_Navisworks_Freedom_2023_Win_64bit_dlm'
            dest: 'C:\Temp'
            ignore_errors: true

        - name: Silent install Autodesk Navisworks Freedom 2023 using win_package from the specified path
          ansible.windows.win_package:
          # Specify the install_path on Variables in AWX before running
            path: 'C:\Temp\Autodesk_Navisworks_Freedom_2023_Win_64bit_dlm\Setup.exe'
            state: present
            arguments: /silent
            ignore_errors: true
          
    # Autodesk Diroots ProSheets Addin
    - name: Silent install Autodesk Diroots ProSheets Addin using win_package from the specified UNC path
      ansible.windows.win_package:
      # Specify the install_path on Variables in AWX before running
        path: '{{ install_path }}\Autodesk\Addons\Diroots_Prosheet\ProSheets_12130.exe'
        state: present
        arguments: /i // /qn accept_eula=1
      tags:
      - Prosheets
      ignore_errors: true

    # LibreOffice
    - name: Silent install LibreOffice using win_package from the specified UNC path
      ansible.windows.win_package:
      # Specify the install_path on Variables in AWX before running
        path: '{{ install_path }}\LibreOffice_7.5.5.msi'
        state: present
        arguments: /q /norestart
      tags:
      - LibreOffice
      ignore_errors: true

    # OnlyOffice
    - name: Silent install ONLYOffice using win_package from the specified UNC path
      ansible.windows.win_package:
      # Specify the install_path on Variables in AWX before running
        path: '{{ install_path }}\DesktopEditors_x64.msi'
        state: present
        arguments: /q /norestart
      tags:
      - OnlyOffice
      ignore_errors: true

    # 7Zip
    - name: Silent install 7Zip MSI using win_package from the specified UNC path
      ansible.windows.win_package:
      # Specify the install_path on Variables in AWX before running
        path: '{{ install_path }}\7z2301-x64.msi'
        state: present
        arguments: /q /norestart
      tags:
      - 7Zip
      ignore_errors: true

    # Outlook for Windows (Powershell Download)
    - name: Silent install Outlook for Windows using win_powershell from the specified UNC path
      ansible.windows.win_powershell:
      # Specify the install_path on Variables in AWX before running
        script: |
          $apiUrl = "https://store.rg-adguard.net/api/GetFiles"

          #$productUrl = "https://apps.microsoft.com/detail/{{ app_id }}?hl=en-us&gl=US"
          $productUrl = "https://www.microsoft.com/store/productId/{{ app_id }}" # Specify the app id
          #$productUrl = "https://www.microsoft.com/store/productId/9NRX63209R7B" # Outlook for Windows
          #$productUrl = "https://www.microsoft.com/store/productId/9NBLGGH4NNS1" # App Installer

          $downloadFolder = Join-Path $env:TEMP "StoreDownloads"
          if(!(Test-Path $downloadFolder -PathType Container)) {
              New-Item $downloadFolder -ItemType Directory -Force
          }

          $body = @{
              type = 'url'
              url  = $productUrl
              ring = 'RP'
              lang = 'en-US'
          }

          $raw = Invoke-RestMethod -Method Post -Uri $apiUrl -ContentType 'application/x-www-form-urlencoded' -Body $body

          $raw | Select-String '<tr style.*<a href=\"(?<url>.*)"\s.*>(?<text>.*)<\/a>' -AllMatches|
          % { $_.Matches } |
          % { 
              $url = $_.Groups[1].Value
              $text = $_.Groups[2].Value
              Write-Host $text

              if($text -match "_(x64).*msix(|bundle)$") {
                  $downloadFile = Join-Path $downloadFolder $text
                  if(!(Test-Path $downloadFile)) {
                      Invoke-WebRequest -Uri $url -OutFile $downloadFile
                  }
              }
          }

          cd $downloadFolder
          $packPath = Get-Item Microsoft.OutlookForWindows*.msix

          DISM.EXE /Online /Add-ProvisionedAppxPackage /PackagePath:$packPath /SkipLicense

      tags:
        - OFW_Machine
      ignore_errors: true

    # Outlook for Windows (Powershell UNC Path)
    - name: Silent install Outlook for Windows using win_powershell from the specified UNC path
      ansible.windows.win_powershell:
      # Specify the install_path on Variables in AWX before running
        script: |
          $PackagePath = {{ install_path }}\Outlook_for_Windows.appx
          DISM.EXE -Online -Add-ProvisionedAppxPackage -PackagePath:"$PackagePath" -SkipLicense
        
      tags:
        - OFW_Machine2
      ignore_errors: true

    # Outlook for Windows (win_package)
    - name: Silent install Outlook for Windows using win_package
      ansible.windows.win_package:
      # Specify the install_path on Variables in AWX before running
        path: '{{ install_path }}\Outlook_for_Windows.appx'
        state: present
      tags:
        - OFW_User
      ignore_errors: true

    # Bitdefender (cmd method)
    - name: Silent install Bitdefender using cmd (win_command)
      ansible.windows.win_command:
      # Specify the install_path on Variables in AWX before running
        cmd: '{{ install_path }}\Bitdefender\epskit_x64.exe /bdparams /silent'
      tags:
        - Bitdefender
      # ignore_errors: true
      register: bitdefender
      failed_when: bitdefender.rc != 1 and bitdefender.rc != 0

    # WorkTime Agent
    - name: Silent Install WorkTime Agent
      ansible.windows.win_package:
      # Specify the install_path on Variables in AWX before running
        path: '{{ install_path }}\wta_agent_56_164.exe'
        state: present
        arguments: /i /silent /qn
      tags: 
        - WorkTime
      ignore_errors: true